// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hapi/chart/metadata.proto

package chart

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Metadata_Engine int32

const (
	Metadata_UNKNOWN Metadata_Engine = 0
	Metadata_GOTPL   Metadata_Engine = 1
)

var Metadata_Engine_name = map[int32]string{
	0: "UNKNOWN",
	1: "GOTPL",
}
var Metadata_Engine_value = map[string]int32{
	"UNKNOWN": 0,
	"GOTPL":   1,
}

func (x Metadata_Engine) String() string {
	return proto.EnumName(Metadata_Engine_name, int32(x))
}
func (Metadata_Engine) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metadata_16a60a1a41d0ad3d, []int{1, 0}
}

// Maintainer describes a Chart maintainer.
type Maintainer struct {
	// Name is a user name or organization name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Email is an optional email address to contact the named maintainer
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Url is an optional URL to an address for the named maintainer
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Maintainer) Reset()         { *m = Maintainer{} }
func (m *Maintainer) String() string { return proto.CompactTextString(m) }
func (*Maintainer) ProtoMessage()    {}
func (*Maintainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_16a60a1a41d0ad3d, []int{0}
}
func (m *Maintainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Maintainer.Unmarshal(m, b)
}
func (m *Maintainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Maintainer.Marshal(b, m, deterministic)
}
func (dst *Maintainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Maintainer.Merge(dst, src)
}
func (m *Maintainer) XXX_Size() int {
	return xxx_messageInfo_Maintainer.Size(m)
}
func (m *Maintainer) XXX_DiscardUnknown() {
	xxx_messageInfo_Maintainer.DiscardUnknown(m)
}

var xxx_messageInfo_Maintainer proto.InternalMessageInfo

func (m *Maintainer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Maintainer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Maintainer) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// 	Metadata for a Chart file. This models the structure of a Chart.yaml file.
//
// 	Spec: https://k8s.io/helm/blob/master/docs/design/chart_format.md#the-chart-file
type Metadata struct {
	// The name of the chart
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The URL to a relevant project page, git repo, or contact person
	Home string `protobuf:"bytes,2,opt,name=home,proto3" json:"home,omitempty"`
	// Source is the URL to the source code of this chart
	Sources []string `protobuf:"bytes,3,rep,name=sources,proto3" json:"sources,omitempty"`
	// A SemVer 2 conformant version string of the chart
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// A one-sentence description of the chart
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// A list of string keywords
	Keywords []string `protobuf:"bytes,6,rep,name=keywords,proto3" json:"keywords,omitempty"`
	// A list of name and URL/email address combinations for the maintainer(s)
	Maintainers []*Maintainer `protobuf:"bytes,7,rep,name=maintainers,proto3" json:"maintainers,omitempty"`
	// The name of the template engine to use. Defaults to 'gotpl'.
	Engine string `protobuf:"bytes,8,opt,name=engine,proto3" json:"engine,omitempty"`
	// The URL to an icon file.
	Icon string `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`
	// The API Version of this chart.
	ApiVersion string `protobuf:"bytes,10,opt,name=apiVersion,proto3" json:"apiVersion,omitempty"`
	// The condition to check to enable chart
	Condition string `protobuf:"bytes,11,opt,name=condition,proto3" json:"condition,omitempty"`
	// The tags to check to enable chart
	Tags string `protobuf:"bytes,12,opt,name=tags,proto3" json:"tags,omitempty"`
	// The version of the application enclosed inside of this chart.
	AppVersion string `protobuf:"bytes,13,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	// Whether or not this chart is deprecated
	Deprecated bool `protobuf:"varint,14,opt,name=deprecated,proto3" json:"deprecated,omitempty"`
	// TillerVersion is a SemVer constraints on what version of Tiller is required.
	// See SemVer ranges here: https://github.com/Masterminds/semver#basic-comparisons
	TillerVersion string `protobuf:"bytes,15,opt,name=tillerVersion,proto3" json:"tillerVersion,omitempty"`
	// Annotations are additional mappings uninterpreted by Tiller,
	// made available for inspection by other applications.
	Annotations map[string]string `protobuf:"bytes,16,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// KubeVersion is a SemVer constraint specifying the version of Kubernetes required.
	KubeVersion string `protobuf:"bytes,17,opt,name=kubeVersion,proto3" json:"kubeVersion,omitempty"`
	// During chart install or update, this field determines whether or not the metadata can be overridden by flags like --app-version
	OverrideMetadata     bool     `protobuf:"varint,18,opt,name=overrideMetadata,proto3" json:"overrideMetadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_16a60a1a41d0ad3d, []int{1}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Metadata) GetHome() string {
	if m != nil {
		return m.Home
	}
	return ""
}

func (m *Metadata) GetSources() []string {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (m *Metadata) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Metadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Metadata) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *Metadata) GetMaintainers() []*Maintainer {
	if m != nil {
		return m.Maintainers
	}
	return nil
}

func (m *Metadata) GetEngine() string {
	if m != nil {
		return m.Engine
	}
	return ""
}

func (m *Metadata) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *Metadata) GetApiVersion() string {
	if m != nil {
		return m.ApiVersion
	}
	return ""
}

func (m *Metadata) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *Metadata) GetTags() string {
	if m != nil {
		return m.Tags
	}
	return ""
}

func (m *Metadata) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Metadata) GetDeprecated() bool {
	if m != nil {
		return m.Deprecated
	}
	return false
}

func (m *Metadata) GetTillerVersion() string {
	if m != nil {
		return m.TillerVersion
	}
	return ""
}

func (m *Metadata) GetAnnotations() map[string]string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *Metadata) GetKubeVersion() string {
	if m != nil {
		return m.KubeVersion
	}
	return ""
}

func (m *Metadata) GetOverrideMetadata() bool {
	if m != nil {
		return m.OverrideMetadata
	}
	return false
}

func init() {
	proto.RegisterType((*Maintainer)(nil), "hapi.chart.Maintainer")
	proto.RegisterType((*Metadata)(nil), "hapi.chart.Metadata")
	proto.RegisterMapType((map[string]string)(nil), "hapi.chart.Metadata.AnnotationsEntry")
	proto.RegisterEnum("hapi.chart.Metadata_Engine", Metadata_Engine_name, Metadata_Engine_value)
}

func init() { proto.RegisterFile("hapi/chart/metadata.proto", fileDescriptor_metadata_16a60a1a41d0ad3d) }

var fileDescriptor_metadata_16a60a1a41d0ad3d = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x35, 0x9b, 0xa6, 0x6d, 0x6e, 0x5c, 0x8d, 0x17, 0x59, 0xc6, 0x45, 0x24, 0x14, 0x85, 0xe2,
	0x43, 0x17, 0xf4, 0x65, 0xf1, 0x41, 0x50, 0x58, 0x56, 0xd0, 0xed, 0x4a, 0xf0, 0x03, 0x7c, 0x9b,
	0x4d, 0x2e, 0xdb, 0xa1, 0xc9, 0x4c, 0x98, 0x4c, 0x2b, 0xfd, 0x6d, 0xfe, 0x39, 0x99, 0x49, 0x66,
	0x9b, 0xea, 0xbe, 0xdd, 0x73, 0x4e, 0xe6, 0xdc, 0x39, 0x77, 0x6e, 0xe0, 0xd9, 0x8a, 0x37, 0xe2,
	0xac, 0x58, 0x71, 0x6d, 0xce, 0x6a, 0x32, 0xbc, 0xe4, 0x86, 0x2f, 0x1a, 0xad, 0x8c, 0x42, 0xb0,
	0xd2, 0xc2, 0x49, 0xb3, 0x4f, 0x00, 0x57, 0x5c, 0x48, 0xc3, 0x85, 0x24, 0x8d, 0x08, 0x23, 0xc9,
	0x6b, 0x62, 0x41, 0x16, 0xcc, 0xe3, 0xdc, 0xd5, 0xf8, 0x14, 0x22, 0xaa, 0xb9, 0xa8, 0xd8, 0x91,
	0x23, 0x3b, 0x80, 0x29, 0x84, 0x1b, 0x5d, 0xb1, 0xd0, 0x71, 0xb6, 0x9c, 0xfd, 0x89, 0x60, 0x7a,
	0xd5, 0x37, 0xba, 0xd7, 0x08, 0x61, 0xb4, 0x52, 0x35, 0xf5, 0x3e, 0xae, 0x46, 0x06, 0x93, 0x56,
	0x6d, 0x74, 0x41, 0x2d, 0x0b, 0xb3, 0x70, 0x1e, 0xe7, 0x1e, 0x5a, 0x65, 0x4b, 0xba, 0x15, 0x4a,
	0xb2, 0x91, 0x3b, 0xe0, 0x21, 0x66, 0x90, 0x94, 0xd4, 0x16, 0x5a, 0x34, 0xc6, 0xaa, 0x91, 0x53,
	0x87, 0x14, 0x9e, 0xc2, 0x74, 0x4d, 0xbb, 0xdf, 0x4a, 0x97, 0x2d, 0x1b, 0x3b, 0xdb, 0x3b, 0x8c,
	0xe7, 0x90, 0xd4, 0x77, 0x81, 0x5b, 0x36, 0xc9, 0xc2, 0x79, 0xf2, 0xe6, 0x64, 0xb1, 0x1f, 0xc9,
	0x62, 0x3f, 0x8f, 0x7c, 0xf8, 0x29, 0x9e, 0xc0, 0x98, 0xe4, 0xad, 0x90, 0xc4, 0xa6, 0xae, 0x65,
	0x8f, 0x6c, 0x2e, 0x51, 0x28, 0xc9, 0xe2, 0x2e, 0x97, 0xad, 0xf1, 0x05, 0x00, 0x6f, 0xc4, 0x8f,
	0x3e, 0x00, 0x38, 0x65, 0xc0, 0xe0, 0x73, 0x88, 0x0b, 0x25, 0x4b, 0xe1, 0x12, 0x24, 0x4e, 0xde,
	0x13, 0xd6, 0xd1, 0xf0, 0xdb, 0x96, 0x3d, 0xec, 0x1c, 0x6d, 0xdd, 0x39, 0x36, 0xde, 0xf1, 0xd8,
	0x3b, 0x7a, 0xc6, 0xea, 0x25, 0x35, 0x9a, 0x0a, 0x6e, 0xa8, 0x64, 0x8f, 0xb2, 0x60, 0x3e, 0xcd,
	0x07, 0x0c, 0xbe, 0x84, 0x63, 0x23, 0xaa, 0x8a, 0xb4, 0xb7, 0x78, 0xec, 0x2c, 0x0e, 0x49, 0xbc,
	0x84, 0x84, 0x4b, 0xa9, 0x0c, 0xb7, 0xf7, 0x68, 0x59, 0xea, 0xa6, 0xf3, 0xea, 0x60, 0x3a, 0x7e,
	0x97, 0x3e, 0xec, 0xbf, 0xbb, 0x90, 0x46, 0xef, 0xf2, 0xe1, 0x49, 0xfb, 0x48, 0xeb, 0xcd, 0x0d,
	0xf9, 0x66, 0x4f, 0xba, 0x47, 0x1a, 0x50, 0xf8, 0x1a, 0x52, 0xb5, 0x25, 0xad, 0x45, 0x49, 0xde,
	0x93, 0xa1, 0xbb, 0xf6, 0x7f, 0xfc, 0xe9, 0x7b, 0x48, 0xff, 0x6d, 0x67, 0x37, 0x70, 0x4d, 0xbb,
	0x7e, 0xc3, 0x6c, 0x69, 0x37, 0x75, 0xcb, 0xab, 0x8d, 0xdf, 0xb0, 0x0e, 0xbc, 0x3b, 0x3a, 0x0f,
	0x66, 0x19, 0x8c, 0x2f, 0xba, 0xc7, 0x4a, 0x60, 0xf2, 0x7d, 0xf9, 0x79, 0x79, 0xfd, 0x73, 0x99,
	0x3e, 0xc0, 0x18, 0xa2, 0xcb, 0xeb, 0x6f, 0x5f, 0xbf, 0xa4, 0xc1, 0xc7, 0xc9, 0xaf, 0xc8, 0xe5,
	0xbb, 0x19, 0xbb, 0x7f, 0xe4, 0xed, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xa1, 0x61, 0x2a,
	0x40, 0x03, 0x00, 0x00,
}
